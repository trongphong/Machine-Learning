{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "07a0aa59",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:04.832274Z",
     "iopub.status.busy": "2024-07-09T09:45:04.831788Z",
     "iopub.status.idle": "2024-07-09T09:45:05.965183Z",
     "shell.execute_reply": "2024-07-09T09:45:05.963750Z"
    },
    "papermill": {
     "duration": 1.151212,
     "end_time": "2024-07-09T09:45:05.968633",
     "exception": false,
     "start_time": "2024-07-09T09:45:04.817421",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/titanic/train.csv\n",
      "/kaggle/input/titanic/test.csv\n",
      "/kaggle/input/titanic/gender_submission.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "846d442b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:05.996144Z",
     "iopub.status.busy": "2024-07-09T09:45:05.995447Z",
     "iopub.status.idle": "2024-07-09T09:45:07.611171Z",
     "shell.execute_reply": "2024-07-09T09:45:07.609829Z"
    },
    "papermill": {
     "duration": 1.632896,
     "end_time": "2024-07-09T09:45:07.614462",
     "exception": false,
     "start_time": "2024-07-09T09:45:05.981566",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "df83e20a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:07.641997Z",
     "iopub.status.busy": "2024-07-09T09:45:07.640597Z",
     "iopub.status.idle": "2024-07-09T09:45:07.685231Z",
     "shell.execute_reply": "2024-07-09T09:45:07.683805Z"
    },
    "papermill": {
     "duration": 0.061773,
     "end_time": "2024-07-09T09:45:07.688474",
     "exception": false,
     "start_time": "2024-07-09T09:45:07.626701",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train=pd.read_csv('/kaggle/input/titanic/train.csv')\n",
    "test= pd.read_csv('/kaggle/input/titanic/test.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "3a7b531e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:07.715695Z",
     "iopub.status.busy": "2024-07-09T09:45:07.714608Z",
     "iopub.status.idle": "2024-07-09T09:45:07.726493Z",
     "shell.execute_reply": "2024-07-09T09:45:07.725220Z"
    },
    "papermill": {
     "duration": 0.028289,
     "end_time": "2024-07-09T09:45:07.729177",
     "exception": false,
     "start_time": "2024-07-09T09:45:07.700888",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['PassengerId', 'Survived', 'Pclass', 'Name', 'Sex', 'Age', 'SibSp',\n",
       "       'Parch', 'Ticket', 'Fare', 'Cabin', 'Embarked'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "95a69c3c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:07.756572Z",
     "iopub.status.busy": "2024-07-09T09:45:07.756086Z",
     "iopub.status.idle": "2024-07-09T09:45:07.790254Z",
     "shell.execute_reply": "2024-07-09T09:45:07.788939Z"
    },
    "papermill": {
     "duration": 0.051808,
     "end_time": "2024-07-09T09:45:07.793295",
     "exception": false,
     "start_time": "2024-07-09T09:45:07.741487",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>A/5 21171</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17599</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C85</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Heikkinen, Miss. Laina</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>STON/O2. 3101282</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113803</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>C123</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Allen, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>373450</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Survived  Pclass  \\\n",
       "0            1         0       3   \n",
       "1            2         1       1   \n",
       "2            3         1       3   \n",
       "3            4         1       1   \n",
       "4            5         0       3   \n",
       "\n",
       "                                                Name     Sex   Age  SibSp  \\\n",
       "0                            Braund, Mr. Owen Harris    male  22.0      1   \n",
       "1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n",
       "2                             Heikkinen, Miss. Laina  female  26.0      0   \n",
       "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n",
       "4                           Allen, Mr. William Henry    male  35.0      0   \n",
       "\n",
       "   Parch            Ticket     Fare Cabin Embarked  \n",
       "0      0         A/5 21171   7.2500   NaN        S  \n",
       "1      0          PC 17599  71.2833   C85        C  \n",
       "2      0  STON/O2. 3101282   7.9250   NaN        S  \n",
       "3      0            113803  53.1000  C123        S  \n",
       "4      0            373450   8.0500   NaN        S  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "9eb31638",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:07.820949Z",
     "iopub.status.busy": "2024-07-09T09:45:07.820446Z",
     "iopub.status.idle": "2024-07-09T09:45:07.850034Z",
     "shell.execute_reply": "2024-07-09T09:45:07.848647Z"
    },
    "papermill": {
     "duration": 0.046918,
     "end_time": "2024-07-09T09:45:07.853218",
     "exception": false,
     "start_time": "2024-07-09T09:45:07.806300",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 891 entries, 0 to 890\n",
      "Data columns (total 12 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   PassengerId  891 non-null    int64  \n",
      " 1   Survived     891 non-null    int64  \n",
      " 2   Pclass       891 non-null    int64  \n",
      " 3   Name         891 non-null    object \n",
      " 4   Sex          891 non-null    object \n",
      " 5   Age          714 non-null    float64\n",
      " 6   SibSp        891 non-null    int64  \n",
      " 7   Parch        891 non-null    int64  \n",
      " 8   Ticket       891 non-null    object \n",
      " 9   Fare         891 non-null    float64\n",
      " 10  Cabin        204 non-null    object \n",
      " 11  Embarked     889 non-null    object \n",
      "dtypes: float64(2), int64(5), object(5)\n",
      "memory usage: 83.7+ KB\n"
     ]
    }
   ],
   "source": [
    "train.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "54d0a979",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:07.881164Z",
     "iopub.status.busy": "2024-07-09T09:45:07.880606Z",
     "iopub.status.idle": "2024-07-09T09:45:07.889317Z",
     "shell.execute_reply": "2024-07-09T09:45:07.888031Z"
    },
    "papermill": {
     "duration": 0.026012,
     "end_time": "2024-07-09T09:45:07.892018",
     "exception": false,
     "start_time": "2024-07-09T09:45:07.866006",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(418, 11)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "dc26865c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:07.922024Z",
     "iopub.status.busy": "2024-07-09T09:45:07.921497Z",
     "iopub.status.idle": "2024-07-09T09:45:07.934525Z",
     "shell.execute_reply": "2024-07-09T09:45:07.933009Z"
    },
    "papermill": {
     "duration": 0.030712,
     "end_time": "2024-07-09T09:45:07.937324",
     "exception": false,
     "start_time": "2024-07-09T09:45:07.906612",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train=train.drop(['Cabin', 'Ticket'], axis=1)\n",
    "test=test.drop(['Cabin', 'Ticket'], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "7ed824ac",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:07.965631Z",
     "iopub.status.busy": "2024-07-09T09:45:07.965103Z",
     "iopub.status.idle": "2024-07-09T09:45:07.982670Z",
     "shell.execute_reply": "2024-07-09T09:45:07.981313Z"
    },
    "papermill": {
     "duration": 0.035017,
     "end_time": "2024-07-09T09:45:07.985532",
     "exception": false,
     "start_time": "2024-07-09T09:45:07.950515",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train['Title']=train['Name'].str.extract(r'(\\w+)\\.')\n",
    "test['Title']=test['Name'].str.extract(r'(\\w+)\\.')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "854ad42c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:08.016145Z",
     "iopub.status.busy": "2024-07-09T09:45:08.015565Z",
     "iopub.status.idle": "2024-07-09T09:45:08.033904Z",
     "shell.execute_reply": "2024-07-09T09:45:08.032435Z"
    },
    "papermill": {
     "duration": 0.038087,
     "end_time": "2024-07-09T09:45:08.037372",
     "exception": false,
     "start_time": "2024-07-09T09:45:07.999285",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train['Title']=train['Title'].replace([ 'Lady','Don', 'Rev', 'Dr', 'Major','Col', 'Sir','Capt', 'Countess','Jonkheer'], 'rare')\n",
    "train['Title']=train['Title'].replace(['Mlle','Ms'], 'Mrs')\n",
    "train['Title']=train['Title'].replace('Mme', 'Miss')\n",
    "test['Title']=test['Title'].replace([ 'Lady','Don','Dona', 'Rev', 'Dr', 'Major','Col', 'Sir','Capt', 'Countess','Jonkheer'], 'rare')\n",
    "test['Title']=test['Title'].replace(['Mlle','Ms'], 'Mrs')\n",
    "test['Title']=test['Title'].replace('Mme', 'Miss')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "a1e5a8e6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:08.066207Z",
     "iopub.status.busy": "2024-07-09T09:45:08.065662Z",
     "iopub.status.idle": "2024-07-09T09:45:08.075661Z",
     "shell.execute_reply": "2024-07-09T09:45:08.074366Z"
    },
    "papermill": {
     "duration": 0.027864,
     "end_time": "2024-07-09T09:45:08.078589",
     "exception": false,
     "start_time": "2024-07-09T09:45:08.050725",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Mr', 'Mrs', 'Miss', 'Master', 'rare'], dtype=object)"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test['Title'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "6859465a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:08.107649Z",
     "iopub.status.busy": "2024-07-09T09:45:08.107142Z",
     "iopub.status.idle": "2024-07-09T09:45:08.117181Z",
     "shell.execute_reply": "2024-07-09T09:45:08.115639Z"
    },
    "papermill": {
     "duration": 0.028475,
     "end_time": "2024-07-09T09:45:08.120641",
     "exception": false,
     "start_time": "2024-07-09T09:45:08.092166",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Mr', 'Mrs', 'Miss', 'Master', 'rare'], dtype=object)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train['Title'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "414fe6eb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:08.150214Z",
     "iopub.status.busy": "2024-07-09T09:45:08.149607Z",
     "iopub.status.idle": "2024-07-09T09:45:08.160860Z",
     "shell.execute_reply": "2024-07-09T09:45:08.159242Z"
    },
    "papermill": {
     "duration": 0.029765,
     "end_time": "2024-07-09T09:45:08.163884",
     "exception": false,
     "start_time": "2024-07-09T09:45:08.134119",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train=train.drop('Name', axis=1)\n",
    "test=test.drop('Name', axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "ac6860fa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:08.194503Z",
     "iopub.status.busy": "2024-07-09T09:45:08.193094Z",
     "iopub.status.idle": "2024-07-09T09:45:08.212471Z",
     "shell.execute_reply": "2024-07-09T09:45:08.210860Z"
    },
    "papermill": {
     "duration": 0.03759,
     "end_time": "2024-07-09T09:45:08.215499",
     "exception": false,
     "start_time": "2024-07-09T09:45:08.177909",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "      <th>Title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>S</td>\n",
       "      <td>Mr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C</td>\n",
       "      <td>Mrs</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>S</td>\n",
       "      <td>Miss</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>S</td>\n",
       "      <td>Mrs</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>S</td>\n",
       "      <td>Mr</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Survived  Pclass     Sex   Age  SibSp  Parch     Fare  \\\n",
       "0            1         0       3    male  22.0      1      0   7.2500   \n",
       "1            2         1       1  female  38.0      1      0  71.2833   \n",
       "2            3         1       3  female  26.0      0      0   7.9250   \n",
       "3            4         1       1  female  35.0      1      0  53.1000   \n",
       "4            5         0       3    male  35.0      0      0   8.0500   \n",
       "\n",
       "  Embarked Title  \n",
       "0        S    Mr  \n",
       "1        C   Mrs  \n",
       "2        S  Miss  \n",
       "3        S   Mrs  \n",
       "4        S    Mr  "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "9805c345",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:08.245892Z",
     "iopub.status.busy": "2024-07-09T09:45:08.245368Z",
     "iopub.status.idle": "2024-07-09T09:45:08.545604Z",
     "shell.execute_reply": "2024-07-09T09:45:08.544280Z"
    },
    "papermill": {
     "duration": 0.319372,
     "end_time": "2024-07-09T09:45:08.548763",
     "exception": false,
     "start_time": "2024-07-09T09:45:08.229391",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import LabelEncoder"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b2d5aa00",
   "metadata": {
    "papermill": {
     "duration": 0.012484,
     "end_time": "2024-07-09T09:45:08.574488",
     "exception": false,
     "start_time": "2024-07-09T09:45:08.562004",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Label Encoder"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "d5376d1d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:08.602165Z",
     "iopub.status.busy": "2024-07-09T09:45:08.601712Z",
     "iopub.status.idle": "2024-07-09T09:45:08.607788Z",
     "shell.execute_reply": "2024-07-09T09:45:08.606319Z"
    },
    "papermill": {
     "duration": 0.022865,
     "end_time": "2024-07-09T09:45:08.610325",
     "exception": false,
     "start_time": "2024-07-09T09:45:08.587460",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "Enco=LabelEncoder()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "8dede720",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:08.638864Z",
     "iopub.status.busy": "2024-07-09T09:45:08.638414Z",
     "iopub.status.idle": "2024-07-09T09:45:08.647478Z",
     "shell.execute_reply": "2024-07-09T09:45:08.646192Z"
    },
    "papermill": {
     "duration": 0.026397,
     "end_time": "2024-07-09T09:45:08.649879",
     "exception": false,
     "start_time": "2024-07-09T09:45:08.623482",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "Enco.fit(train['Sex'])\n",
    "train['Sex']=Enco.transform(train['Sex'])\n",
    "test['Sex']=Enco.transform(test['Sex'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "3913cf0e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:08.678742Z",
     "iopub.status.busy": "2024-07-09T09:45:08.678270Z",
     "iopub.status.idle": "2024-07-09T09:45:08.687375Z",
     "shell.execute_reply": "2024-07-09T09:45:08.686121Z"
    },
    "papermill": {
     "duration": 0.026553,
     "end_time": "2024-07-09T09:45:08.690073",
     "exception": false,
     "start_time": "2024-07-09T09:45:08.663520",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "Enco.fit(train['Embarked'])\n",
    "train['Embarked']=Enco.transform(train['Embarked'])\n",
    "test['Embarked']=Enco.transform(test['Embarked'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "2a526818",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:08.719522Z",
     "iopub.status.busy": "2024-07-09T09:45:08.718704Z",
     "iopub.status.idle": "2024-07-09T09:45:08.727063Z",
     "shell.execute_reply": "2024-07-09T09:45:08.725738Z"
    },
    "papermill": {
     "duration": 0.025873,
     "end_time": "2024-07-09T09:45:08.729692",
     "exception": false,
     "start_time": "2024-07-09T09:45:08.703819",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "Enco.fit(train['Title'])\n",
    "train['Title']=Enco.transform(train['Title'])\n",
    "test['Title']=Enco.transform(test['Title'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "b5fbe46c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:08.758635Z",
     "iopub.status.busy": "2024-07-09T09:45:08.758186Z",
     "iopub.status.idle": "2024-07-09T09:45:08.774697Z",
     "shell.execute_reply": "2024-07-09T09:45:08.773473Z"
    },
    "papermill": {
     "duration": 0.034725,
     "end_time": "2024-07-09T09:45:08.777373",
     "exception": false,
     "start_time": "2024-07-09T09:45:08.742648",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "      <th>Title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Survived  Pclass  Sex   Age  SibSp  Parch     Fare  Embarked  \\\n",
       "0            1         0       3    1  22.0      1      0   7.2500         2   \n",
       "1            2         1       1    0  38.0      1      0  71.2833         0   \n",
       "2            3         1       3    0  26.0      0      0   7.9250         2   \n",
       "3            4         1       1    0  35.0      1      0  53.1000         2   \n",
       "4            5         0       3    1  35.0      0      0   8.0500         2   \n",
       "\n",
       "   Title  \n",
       "0      2  \n",
       "1      3  \n",
       "2      1  \n",
       "3      3  \n",
       "4      2  "
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "1a2f33f6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:08.806697Z",
     "iopub.status.busy": "2024-07-09T09:45:08.806086Z",
     "iopub.status.idle": "2024-07-09T09:45:08.822609Z",
     "shell.execute_reply": "2024-07-09T09:45:08.821350Z"
    },
    "papermill": {
     "duration": 0.034608,
     "end_time": "2024-07-09T09:45:08.825389",
     "exception": false,
     "start_time": "2024-07-09T09:45:08.790781",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "      <th>Title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>892</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>34.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.8292</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>893</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>47.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7.0000</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>894</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>62.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>9.6875</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>895</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>27.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.6625</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>896</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>12.2875</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Pclass  Sex   Age  SibSp  Parch     Fare  Embarked  Title\n",
       "0          892       3    1  34.5      0      0   7.8292         1      2\n",
       "1          893       3    0  47.0      1      0   7.0000         2      3\n",
       "2          894       2    1  62.0      0      0   9.6875         1      2\n",
       "3          895       3    1  27.0      0      0   8.6625         2      2\n",
       "4          896       3    0  22.0      1      1  12.2875         2      3"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "3165d2fd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:08.854848Z",
     "iopub.status.busy": "2024-07-09T09:45:08.854440Z",
     "iopub.status.idle": "2024-07-09T09:45:08.867040Z",
     "shell.execute_reply": "2024-07-09T09:45:08.865513Z"
    },
    "papermill": {
     "duration": 0.030296,
     "end_time": "2024-07-09T09:45:08.869854",
     "exception": false,
     "start_time": "2024-07-09T09:45:08.839558",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 891 entries, 0 to 890\n",
      "Data columns (total 10 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   PassengerId  891 non-null    int64  \n",
      " 1   Survived     891 non-null    int64  \n",
      " 2   Pclass       891 non-null    int64  \n",
      " 3   Sex          891 non-null    int64  \n",
      " 4   Age          714 non-null    float64\n",
      " 5   SibSp        891 non-null    int64  \n",
      " 6   Parch        891 non-null    int64  \n",
      " 7   Fare         891 non-null    float64\n",
      " 8   Embarked     891 non-null    int64  \n",
      " 9   Title        891 non-null    int64  \n",
      "dtypes: float64(2), int64(8)\n",
      "memory usage: 69.7 KB\n"
     ]
    }
   ],
   "source": [
    "train.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ae56cc94",
   "metadata": {
    "papermill": {
     "duration": 0.013492,
     "end_time": "2024-07-09T09:45:08.897366",
     "exception": false,
     "start_time": "2024-07-09T09:45:08.883874",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Simple imputer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "cdc4c6d3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:08.927129Z",
     "iopub.status.busy": "2024-07-09T09:45:08.926667Z",
     "iopub.status.idle": "2024-07-09T09:45:09.251977Z",
     "shell.execute_reply": "2024-07-09T09:45:09.250575Z"
    },
    "papermill": {
     "duration": 0.344204,
     "end_time": "2024-07-09T09:45:09.255274",
     "exception": false,
     "start_time": "2024-07-09T09:45:08.911070",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.impute import SimpleImputer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "213db8ca",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:09.286515Z",
     "iopub.status.busy": "2024-07-09T09:45:09.285976Z",
     "iopub.status.idle": "2024-07-09T09:45:09.303347Z",
     "shell.execute_reply": "2024-07-09T09:45:09.301875Z"
    },
    "papermill": {
     "duration": 0.036334,
     "end_time": "2024-07-09T09:45:09.306135",
     "exception": false,
     "start_time": "2024-07-09T09:45:09.269801",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "SimImp=SimpleImputer(missing_values=np.nan, strategy='median')\n",
    "SimImp.fit(train[['Age']])\n",
    "train['AgeSim']=SimImp.transform(train[['Age']])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "7c31dfb2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:09.341513Z",
     "iopub.status.busy": "2024-07-09T09:45:09.340719Z",
     "iopub.status.idle": "2024-07-09T09:45:09.376751Z",
     "shell.execute_reply": "2024-07-09T09:45:09.374750Z"
    },
    "papermill": {
     "duration": 0.060775,
     "end_time": "2024-07-09T09:45:09.381266",
     "exception": false,
     "start_time": "2024-07-09T09:45:09.320491",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "      <th>Title</th>\n",
       "      <th>AgeSim</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.4583</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>13.0000</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2250</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2250</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.8792</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>859</th>\n",
       "      <td>860</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2292</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>863</th>\n",
       "      <td>864</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>69.5500</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>868</th>\n",
       "      <td>869</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>9.5000</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>878</th>\n",
       "      <td>879</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.8958</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>888</th>\n",
       "      <td>889</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>23.4500</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>177 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     PassengerId  Survived  Pclass  Sex  Age  SibSp  Parch     Fare  Embarked  \\\n",
       "5              6         0       3    1  NaN      0      0   8.4583         1   \n",
       "17            18         1       2    1  NaN      0      0  13.0000         2   \n",
       "19            20         1       3    0  NaN      0      0   7.2250         0   \n",
       "26            27         0       3    1  NaN      0      0   7.2250         0   \n",
       "28            29         1       3    0  NaN      0      0   7.8792         1   \n",
       "..           ...       ...     ...  ...  ...    ...    ...      ...       ...   \n",
       "859          860         0       3    1  NaN      0      0   7.2292         0   \n",
       "863          864         0       3    0  NaN      8      2  69.5500         2   \n",
       "868          869         0       3    1  NaN      0      0   9.5000         2   \n",
       "878          879         0       3    1  NaN      0      0   7.8958         2   \n",
       "888          889         0       3    0  NaN      1      2  23.4500         2   \n",
       "\n",
       "     Title  AgeSim  \n",
       "5        2    28.0  \n",
       "17       2    28.0  \n",
       "19       3    28.0  \n",
       "26       2    28.0  \n",
       "28       1    28.0  \n",
       "..     ...     ...  \n",
       "859      2    28.0  \n",
       "863      1    28.0  \n",
       "868      2    28.0  \n",
       "878      2    28.0  \n",
       "888      1    28.0  \n",
       "\n",
       "[177 rows x 11 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.loc[train['Age'].isnull()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "7ff7633a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:09.419655Z",
     "iopub.status.busy": "2024-07-09T09:45:09.419159Z",
     "iopub.status.idle": "2024-07-09T09:45:09.426956Z",
     "shell.execute_reply": "2024-07-09T09:45:09.425728Z"
    },
    "papermill": {
     "duration": 0.028316,
     "end_time": "2024-07-09T09:45:09.429711",
     "exception": false,
     "start_time": "2024-07-09T09:45:09.401395",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train=train.drop([ 'AgeSim'], axis=1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8acc5dbf",
   "metadata": {
    "papermill": {
     "duration": 0.014158,
     "end_time": "2024-07-09T09:45:09.458756",
     "exception": false,
     "start_time": "2024-07-09T09:45:09.444598",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Multivariate imputer\n",
    "We impute the missing values by modeling each feature with missing values as a fucntion of other features."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "3f3ec8f2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:09.493613Z",
     "iopub.status.busy": "2024-07-09T09:45:09.492896Z",
     "iopub.status.idle": "2024-07-09T09:45:09.507379Z",
     "shell.execute_reply": "2024-07-09T09:45:09.505698Z"
    },
    "papermill": {
     "duration": 0.037753,
     "end_time": "2024-07-09T09:45:09.511035",
     "exception": false,
     "start_time": "2024-07-09T09:45:09.473282",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.experimental import enable_iterative_imputer\n",
    "from sklearn.impute import IterativeImputer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "bf4d209b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:09.552948Z",
     "iopub.status.busy": "2024-07-09T09:45:09.552174Z",
     "iopub.status.idle": "2024-07-09T09:45:09.575702Z",
     "shell.execute_reply": "2024-07-09T09:45:09.573766Z"
    },
    "papermill": {
     "duration": 0.048988,
     "end_time": "2024-07-09T09:45:09.580410",
     "exception": false,
     "start_time": "2024-07-09T09:45:09.531422",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "MulImp=IterativeImputer(random_state=0)\n",
    "MulImp.fit(train[['Age']])\n",
    "train['AgeMul']=MulImp.fit_transform(train[['Age']])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "2c082d0f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:09.626363Z",
     "iopub.status.busy": "2024-07-09T09:45:09.625231Z",
     "iopub.status.idle": "2024-07-09T09:45:09.653313Z",
     "shell.execute_reply": "2024-07-09T09:45:09.651882Z"
    },
    "papermill": {
     "duration": 0.05384,
     "end_time": "2024-07-09T09:45:09.656800",
     "exception": false,
     "start_time": "2024-07-09T09:45:09.602960",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "      <th>Title</th>\n",
       "      <th>AgeMul</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.4583</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>29.699118</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>13.0000</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>29.699118</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2250</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>29.699118</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2250</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>29.699118</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.8792</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>29.699118</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>859</th>\n",
       "      <td>860</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2292</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>29.699118</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>863</th>\n",
       "      <td>864</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>69.5500</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>29.699118</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>868</th>\n",
       "      <td>869</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>9.5000</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>29.699118</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>878</th>\n",
       "      <td>879</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.8958</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>29.699118</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>888</th>\n",
       "      <td>889</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>23.4500</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>29.699118</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>177 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     PassengerId  Survived  Pclass  Sex  Age  SibSp  Parch     Fare  Embarked  \\\n",
       "5              6         0       3    1  NaN      0      0   8.4583         1   \n",
       "17            18         1       2    1  NaN      0      0  13.0000         2   \n",
       "19            20         1       3    0  NaN      0      0   7.2250         0   \n",
       "26            27         0       3    1  NaN      0      0   7.2250         0   \n",
       "28            29         1       3    0  NaN      0      0   7.8792         1   \n",
       "..           ...       ...     ...  ...  ...    ...    ...      ...       ...   \n",
       "859          860         0       3    1  NaN      0      0   7.2292         0   \n",
       "863          864         0       3    0  NaN      8      2  69.5500         2   \n",
       "868          869         0       3    1  NaN      0      0   9.5000         2   \n",
       "878          879         0       3    1  NaN      0      0   7.8958         2   \n",
       "888          889         0       3    0  NaN      1      2  23.4500         2   \n",
       "\n",
       "     Title     AgeMul  \n",
       "5        2  29.699118  \n",
       "17       2  29.699118  \n",
       "19       3  29.699118  \n",
       "26       2  29.699118  \n",
       "28       1  29.699118  \n",
       "..     ...        ...  \n",
       "859      2  29.699118  \n",
       "863      1  29.699118  \n",
       "868      2  29.699118  \n",
       "878      2  29.699118  \n",
       "888      1  29.699118  \n",
       "\n",
       "[177 rows x 11 columns]"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.loc[train['Age'].isnull()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "427b0f70",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:09.691617Z",
     "iopub.status.busy": "2024-07-09T09:45:09.689996Z",
     "iopub.status.idle": "2024-07-09T09:45:09.700945Z",
     "shell.execute_reply": "2024-07-09T09:45:09.698836Z"
    },
    "papermill": {
     "duration": 0.032826,
     "end_time": "2024-07-09T09:45:09.705626",
     "exception": false,
     "start_time": "2024-07-09T09:45:09.672800",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train=train.drop(['AgeMul'], axis=1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2f57d1ff",
   "metadata": {
    "papermill": {
     "duration": 0.017026,
     "end_time": "2024-07-09T09:45:09.741574",
     "exception": false,
     "start_time": "2024-07-09T09:45:09.724548",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### KNN imputer\n",
    "Using k-Nearest Neighbors to complete the missing values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "8210e32f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:09.781119Z",
     "iopub.status.busy": "2024-07-09T09:45:09.779735Z",
     "iopub.status.idle": "2024-07-09T09:45:09.816643Z",
     "shell.execute_reply": "2024-07-09T09:45:09.815185Z"
    },
    "papermill": {
     "duration": 0.061728,
     "end_time": "2024-07-09T09:45:09.820188",
     "exception": false,
     "start_time": "2024-07-09T09:45:09.758460",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.impute import KNNImputer\n",
    "ImpKnn=KNNImputer(n_neighbors=5)\n",
    "ImpKnn.fit(train[['Age']])\n",
    "train['AgeKnn']=ImpKnn.fit_transform(train[['Age']])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "b9902a88",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-09T09:45:09.854522Z",
     "iopub.status.busy": "2024-07-09T09:45:09.853363Z",
     "iopub.status.idle": "2024-07-09T09:45:09.876790Z",
     "shell.execute_reply": "2024-07-09T09:45:09.875289Z"
    },
    "papermill": {
     "duration": 0.043831,
     "end_time": "2024-07-09T09:45:09.879521",
     "exception": false,
     "start_time": "2024-07-09T09:45:09.835690",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "      <th>Title</th>\n",
       "      <th>AgeKnn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.4583</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>29.699118</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>13.0000</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>29.699118</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2250</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>29.699118</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2250</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>29.699118</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.8792</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>29.699118</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>859</th>\n",
       "      <td>860</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2292</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>29.699118</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>863</th>\n",
       "      <td>864</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>69.5500</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>29.699118</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>868</th>\n",
       "      <td>869</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>9.5000</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>29.699118</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>878</th>\n",
       "      <td>879</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.8958</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>29.699118</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>888</th>\n",
       "      <td>889</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>23.4500</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>29.699118</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>177 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     PassengerId  Survived  Pclass  Sex  Age  SibSp  Parch     Fare  Embarked  \\\n",
       "5              6         0       3    1  NaN      0      0   8.4583         1   \n",
       "17            18         1       2    1  NaN      0      0  13.0000         2   \n",
       "19            20         1       3    0  NaN      0      0   7.2250         0   \n",
       "26            27         0       3    1  NaN      0      0   7.2250         0   \n",
       "28            29         1       3    0  NaN      0      0   7.8792         1   \n",
       "..           ...       ...     ...  ...  ...    ...    ...      ...       ...   \n",
       "859          860         0       3    1  NaN      0      0   7.2292         0   \n",
       "863          864         0       3    0  NaN      8      2  69.5500         2   \n",
       "868          869         0       3    1  NaN      0      0   9.5000         2   \n",
       "878          879         0       3    1  NaN      0      0   7.8958         2   \n",
       "888          889         0       3    0  NaN      1      2  23.4500         2   \n",
       "\n",
       "     Title     AgeKnn  \n",
       "5        2  29.699118  \n",
       "17       2  29.699118  \n",
       "19       3  29.699118  \n",
       "26       2  29.699118  \n",
       "28       1  29.699118  \n",
       "..     ...        ...  \n",
       "859      2  29.699118  \n",
       "863      1  29.699118  \n",
       "868      2  29.699118  \n",
       "878      2  29.699118  \n",
       "888      1  29.699118  \n",
       "\n",
       "[177 rows x 11 columns]"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.loc[train['Age'].isnull()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f6eb32eb",
   "metadata": {
    "papermill": {
     "duration": 0.015211,
     "end_time": "2024-07-09T09:45:09.910809",
     "exception": false,
     "start_time": "2024-07-09T09:45:09.895598",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 26502,
     "sourceId": 3136,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 30732,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 9.292226,
   "end_time": "2024-07-09T09:45:10.751985",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-07-09T09:45:01.459759",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
