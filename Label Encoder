{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":3136,"databundleVersionId":26502,"sourceType":"competition"}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-06-28T13:36:56.218328Z","iopub.execute_input":"2024-06-28T13:36:56.219049Z","iopub.status.idle":"2024-06-28T13:36:56.236075Z","shell.execute_reply.started":"2024-06-28T13:36:56.219010Z","shell.execute_reply":"2024-06-28T13:36:56.234554Z"},"trusted":true},"execution_count":26,"outputs":[{"name":"stdout","text":"/kaggle/input/titanic/train.csv\n/kaggle/input/titanic/test.csv\n/kaggle/input/titanic/gender_submission.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"import matplotlib.pyplot as plt\nimport seaborn as sns","metadata":{"execution":{"iopub.status.busy":"2024-06-28T13:37:01.126527Z","iopub.execute_input":"2024-06-28T13:37:01.126918Z","iopub.status.idle":"2024-06-28T13:37:01.132528Z","shell.execute_reply.started":"2024-06-28T13:37:01.126889Z","shell.execute_reply":"2024-06-28T13:37:01.131262Z"},"trusted":true},"execution_count":27,"outputs":[]},{"cell_type":"code","source":"train=pd.read_csv('/kaggle/input/titanic/train.csv')\ntest= pd.read_csv('/kaggle/input/titanic/test.csv')","metadata":{"execution":{"iopub.status.busy":"2024-06-28T13:37:02.729798Z","iopub.execute_input":"2024-06-28T13:37:02.730180Z","iopub.status.idle":"2024-06-28T13:37:02.747342Z","shell.execute_reply.started":"2024-06-28T13:37:02.730151Z","shell.execute_reply":"2024-06-28T13:37:02.745945Z"},"trusted":true},"execution_count":28,"outputs":[]},{"cell_type":"code","source":"train.columns","metadata":{"execution":{"iopub.status.busy":"2024-06-28T13:22:19.831695Z","iopub.execute_input":"2024-06-28T13:22:19.832097Z","iopub.status.idle":"2024-06-28T13:22:19.844136Z","shell.execute_reply.started":"2024-06-28T13:22:19.832063Z","shell.execute_reply":"2024-06-28T13:22:19.842805Z"},"trusted":true},"execution_count":4,"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"Index(['PassengerId', 'Survived', 'Pclass', 'Name', 'Sex', 'Age', 'SibSp',\n       'Parch', 'Ticket', 'Fare', 'Cabin', 'Embarked'],\n      dtype='object')"},"metadata":{}}]},{"cell_type":"code","source":"train.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-28T13:37:04.685859Z","iopub.execute_input":"2024-06-28T13:37:04.686232Z","iopub.status.idle":"2024-06-28T13:37:04.706540Z","shell.execute_reply.started":"2024-06-28T13:37:04.686203Z","shell.execute_reply":"2024-06-28T13:37:04.705313Z"},"trusted":true},"execution_count":29,"outputs":[{"execution_count":29,"output_type":"execute_result","data":{"text/plain":"   PassengerId  Survived  Pclass  \\\n0            1         0       3   \n1            2         1       1   \n2            3         1       3   \n3            4         1       1   \n4            5         0       3   \n\n                                                Name     Sex   Age  SibSp  \\\n0                            Braund, Mr. Owen Harris    male  22.0      1   \n1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n2                             Heikkinen, Miss. Laina  female  26.0      0   \n3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n4                           Allen, Mr. William Henry    male  35.0      0   \n\n   Parch            Ticket     Fare Cabin Embarked  \n0      0         A/5 21171   7.2500   NaN        S  \n1      0          PC 17599  71.2833   C85        C  \n2      0  STON/O2. 3101282   7.9250   NaN        S  \n3      0            113803  53.1000  C123        S  \n4      0            373450   8.0500   NaN        S  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Name</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Braund, Mr. Owen Harris</td>\n      <td>male</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>A/5 21171</td>\n      <td>7.2500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>PC 17599</td>\n      <td>71.2833</td>\n      <td>C85</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>1</td>\n      <td>3</td>\n      <td>Heikkinen, Miss. Laina</td>\n      <td>female</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>STON/O2. 3101282</td>\n      <td>7.9250</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n      <td>female</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113803</td>\n      <td>53.1000</td>\n      <td>C123</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Allen, Mr. William Henry</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>373450</td>\n      <td>8.0500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"train.info()","metadata":{"execution":{"iopub.status.busy":"2024-06-28T13:22:21.557658Z","iopub.execute_input":"2024-06-28T13:22:21.558447Z","iopub.status.idle":"2024-06-28T13:22:21.592967Z","shell.execute_reply.started":"2024-06-28T13:22:21.558403Z","shell.execute_reply":"2024-06-28T13:22:21.591687Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 891 entries, 0 to 890\nData columns (total 12 columns):\n #   Column       Non-Null Count  Dtype  \n---  ------       --------------  -----  \n 0   PassengerId  891 non-null    int64  \n 1   Survived     891 non-null    int64  \n 2   Pclass       891 non-null    int64  \n 3   Name         891 non-null    object \n 4   Sex          891 non-null    object \n 5   Age          714 non-null    float64\n 6   SibSp        891 non-null    int64  \n 7   Parch        891 non-null    int64  \n 8   Ticket       891 non-null    object \n 9   Fare         891 non-null    float64\n 10  Cabin        204 non-null    object \n 11  Embarked     889 non-null    object \ndtypes: float64(2), int64(5), object(5)\nmemory usage: 83.7+ KB\n","output_type":"stream"}]},{"cell_type":"code","source":"test.shape","metadata":{"execution":{"iopub.status.busy":"2024-06-28T13:37:11.826567Z","iopub.execute_input":"2024-06-28T13:37:11.827013Z","iopub.status.idle":"2024-06-28T13:37:11.834711Z","shell.execute_reply.started":"2024-06-28T13:37:11.826981Z","shell.execute_reply":"2024-06-28T13:37:11.833354Z"},"trusted":true},"execution_count":31,"outputs":[{"execution_count":31,"output_type":"execute_result","data":{"text/plain":"(418, 11)"},"metadata":{}}]},{"cell_type":"code","source":"train=train.drop(['Cabin', 'Ticket'], axis=1)\ntest=test.drop(['Cabin', 'Ticket'], axis=1)","metadata":{"execution":{"iopub.status.busy":"2024-06-28T13:37:16.790318Z","iopub.execute_input":"2024-06-28T13:37:16.791431Z","iopub.status.idle":"2024-06-28T13:37:16.798687Z","shell.execute_reply.started":"2024-06-28T13:37:16.791392Z","shell.execute_reply":"2024-06-28T13:37:16.797404Z"},"trusted":true},"execution_count":32,"outputs":[]},{"cell_type":"code","source":"test.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-28T13:37:20.706548Z","iopub.execute_input":"2024-06-28T13:37:20.706928Z","iopub.status.idle":"2024-06-28T13:37:20.724633Z","shell.execute_reply.started":"2024-06-28T13:37:20.706900Z","shell.execute_reply":"2024-06-28T13:37:20.723527Z"},"trusted":true},"execution_count":33,"outputs":[{"execution_count":33,"output_type":"execute_result","data":{"text/plain":"   PassengerId  Pclass                                          Name     Sex  \\\n0          892       3                              Kelly, Mr. James    male   \n1          893       3              Wilkes, Mrs. James (Ellen Needs)  female   \n2          894       2                     Myles, Mr. Thomas Francis    male   \n3          895       3                              Wirz, Mr. Albert    male   \n4          896       3  Hirvonen, Mrs. Alexander (Helga E Lindqvist)  female   \n\n    Age  SibSp  Parch     Fare Embarked  \n0  34.5      0      0   7.8292        Q  \n1  47.0      1      0   7.0000        S  \n2  62.0      0      0   9.6875        Q  \n3  27.0      0      0   8.6625        S  \n4  22.0      1      1  12.2875        S  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Pclass</th>\n      <th>Name</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Fare</th>\n      <th>Embarked</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>892</td>\n      <td>3</td>\n      <td>Kelly, Mr. James</td>\n      <td>male</td>\n      <td>34.5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>7.8292</td>\n      <td>Q</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>893</td>\n      <td>3</td>\n      <td>Wilkes, Mrs. James (Ellen Needs)</td>\n      <td>female</td>\n      <td>47.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>7.0000</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>894</td>\n      <td>2</td>\n      <td>Myles, Mr. Thomas Francis</td>\n      <td>male</td>\n      <td>62.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>9.6875</td>\n      <td>Q</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>895</td>\n      <td>3</td>\n      <td>Wirz, Mr. Albert</td>\n      <td>male</td>\n      <td>27.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>8.6625</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>896</td>\n      <td>3</td>\n      <td>Hirvonen, Mrs. Alexander (Helga E Lindqvist)</td>\n      <td>female</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>12.2875</td>\n      <td>S</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"train['Title']=train['Name'].str.extract(r'(\\w+)\\.')\ntest['Title']=test['Name'].str.extract(r'(\\w+)\\.')","metadata":{"execution":{"iopub.status.busy":"2024-06-28T13:37:28.965269Z","iopub.execute_input":"2024-06-28T13:37:28.965762Z","iopub.status.idle":"2024-06-28T13:37:28.983872Z","shell.execute_reply.started":"2024-06-28T13:37:28.965726Z","shell.execute_reply":"2024-06-28T13:37:28.982401Z"},"trusted":true},"execution_count":35,"outputs":[]},{"cell_type":"code","source":"train['Title'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-06-28T13:37:31.288711Z","iopub.execute_input":"2024-06-28T13:37:31.289094Z","iopub.status.idle":"2024-06-28T13:37:31.299878Z","shell.execute_reply.started":"2024-06-28T13:37:31.289067Z","shell.execute_reply":"2024-06-28T13:37:31.298478Z"},"trusted":true},"execution_count":36,"outputs":[{"execution_count":36,"output_type":"execute_result","data":{"text/plain":"Title\nMr          517\nMiss        182\nMrs         125\nMaster       40\nDr            7\nRev           6\nMlle          2\nMajor         2\nCol           2\nCountess      1\nCapt          1\nMs            1\nSir           1\nLady          1\nMme           1\nDon           1\nJonkheer      1\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"train['Title']=train['Title'].replace([ 'Lady','Don', 'Rev', 'Dr', 'Major','Col', 'Sir','Capt', 'Countess','Jonkheer'], 'rare')\ntrain['Title']=train['Title'].replace(['Mlle','Ms'], 'Mrs')\ntrain['Title']=train['Title'].replace('Mme', 'Miss')\ntest['Title']=test['Title'].replace([ 'Lady','Don','Dona', 'Rev', 'Dr', 'Major','Col', 'Sir','Capt', 'Countess','Jonkheer'], 'rare')\ntest['Title']=test['Title'].replace(['Mlle','Ms'], 'Mrs')\ntest['Title']=test['Title'].replace('Mme', 'Miss')","metadata":{"execution":{"iopub.status.busy":"2024-06-28T13:37:39.896432Z","iopub.execute_input":"2024-06-28T13:37:39.896907Z","iopub.status.idle":"2024-06-28T13:37:39.914320Z","shell.execute_reply.started":"2024-06-28T13:37:39.896873Z","shell.execute_reply":"2024-06-28T13:37:39.912815Z"},"trusted":true},"execution_count":37,"outputs":[]},{"cell_type":"code","source":"test['Title'].unique()","metadata":{"execution":{"iopub.status.busy":"2024-06-28T13:37:41.308421Z","iopub.execute_input":"2024-06-28T13:37:41.308872Z","iopub.status.idle":"2024-06-28T13:37:41.317307Z","shell.execute_reply.started":"2024-06-28T13:37:41.308839Z","shell.execute_reply":"2024-06-28T13:37:41.315971Z"},"trusted":true},"execution_count":38,"outputs":[{"execution_count":38,"output_type":"execute_result","data":{"text/plain":"array(['Mr', 'Mrs', 'Miss', 'Master', 'rare'], dtype=object)"},"metadata":{}}]},{"cell_type":"code","source":"train['Title'].unique()","metadata":{"execution":{"iopub.status.busy":"2024-06-28T13:37:44.903873Z","iopub.execute_input":"2024-06-28T13:37:44.904272Z","iopub.status.idle":"2024-06-28T13:37:44.912023Z","shell.execute_reply.started":"2024-06-28T13:37:44.904244Z","shell.execute_reply":"2024-06-28T13:37:44.910885Z"},"trusted":true},"execution_count":39,"outputs":[{"execution_count":39,"output_type":"execute_result","data":{"text/plain":"array(['Mr', 'Mrs', 'Miss', 'Master', 'rare'], dtype=object)"},"metadata":{}}]},{"cell_type":"code","source":"train=train.drop('Name', axis=1)\ntest=test.drop('Name', axis=1)","metadata":{"execution":{"iopub.status.busy":"2024-06-28T13:37:46.188847Z","iopub.execute_input":"2024-06-28T13:37:46.189260Z","iopub.status.idle":"2024-06-28T13:37:46.197517Z","shell.execute_reply.started":"2024-06-28T13:37:46.189228Z","shell.execute_reply":"2024-06-28T13:37:46.195859Z"},"trusted":true},"execution_count":40,"outputs":[]},{"cell_type":"code","source":"train.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-28T13:37:49.629186Z","iopub.execute_input":"2024-06-28T13:37:49.629620Z","iopub.status.idle":"2024-06-28T13:37:49.649682Z","shell.execute_reply.started":"2024-06-28T13:37:49.629588Z","shell.execute_reply":"2024-06-28T13:37:49.648330Z"},"trusted":true},"execution_count":41,"outputs":[{"execution_count":41,"output_type":"execute_result","data":{"text/plain":"   PassengerId  Survived  Pclass     Sex   Age  SibSp  Parch     Fare  \\\n0            1         0       3    male  22.0      1      0   7.2500   \n1            2         1       1  female  38.0      1      0  71.2833   \n2            3         1       3  female  26.0      0      0   7.9250   \n3            4         1       1  female  35.0      1      0  53.1000   \n4            5         0       3    male  35.0      0      0   8.0500   \n\n  Embarked Title  \n0        S    Mr  \n1        C   Mrs  \n2        S  Miss  \n3        S   Mrs  \n4        S    Mr  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Fare</th>\n      <th>Embarked</th>\n      <th>Title</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>7.2500</td>\n      <td>S</td>\n      <td>Mr</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>71.2833</td>\n      <td>C</td>\n      <td>Mrs</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>7.9250</td>\n      <td>S</td>\n      <td>Miss</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>53.1000</td>\n      <td>S</td>\n      <td>Mrs</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>8.0500</td>\n      <td>S</td>\n      <td>Mr</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.preprocessing import LabelEncoder","metadata":{"execution":{"iopub.status.busy":"2024-06-28T13:37:53.662539Z","iopub.execute_input":"2024-06-28T13:37:53.662946Z","iopub.status.idle":"2024-06-28T13:37:53.668434Z","shell.execute_reply.started":"2024-06-28T13:37:53.662914Z","shell.execute_reply":"2024-06-28T13:37:53.666991Z"},"trusted":true},"execution_count":42,"outputs":[]},{"cell_type":"markdown","source":"### Label Encoder","metadata":{}},{"cell_type":"code","source":"Enco=LabelEncoder()","metadata":{"execution":{"iopub.status.busy":"2024-06-28T13:37:55.494612Z","iopub.execute_input":"2024-06-28T13:37:55.495034Z","iopub.status.idle":"2024-06-28T13:37:55.500692Z","shell.execute_reply.started":"2024-06-28T13:37:55.494997Z","shell.execute_reply":"2024-06-28T13:37:55.499072Z"},"trusted":true},"execution_count":43,"outputs":[]},{"cell_type":"code","source":"Enco.fit(train['Sex'])\ntrain['Sex']=Enco.transform(train['Sex'])\ntest['Sex']=Enco.transform(test['Sex'])","metadata":{"execution":{"iopub.status.busy":"2024-06-28T13:37:58.890173Z","iopub.execute_input":"2024-06-28T13:37:58.890617Z","iopub.status.idle":"2024-06-28T13:37:58.900904Z","shell.execute_reply.started":"2024-06-28T13:37:58.890577Z","shell.execute_reply":"2024-06-28T13:37:58.899338Z"},"trusted":true},"execution_count":44,"outputs":[]},{"cell_type":"code","source":"Enco.fit(train['Embarked'])\ntrain['Embarked']=Enco.transform(train['Embarked'])\ntest['Embarked']=Enco.transform(test['Embarked'])","metadata":{"execution":{"iopub.status.busy":"2024-06-28T13:38:00.152479Z","iopub.execute_input":"2024-06-28T13:38:00.152875Z","iopub.status.idle":"2024-06-28T13:38:00.161711Z","shell.execute_reply.started":"2024-06-28T13:38:00.152845Z","shell.execute_reply":"2024-06-28T13:38:00.159945Z"},"trusted":true},"execution_count":45,"outputs":[]},{"cell_type":"code","source":"Enco.fit(train['Title'])\ntrain['Title']=Enco.transform(train['Title'])\ntest['Title']=Enco.transform(test['Title'])","metadata":{"execution":{"iopub.status.busy":"2024-06-28T13:38:15.843563Z","iopub.execute_input":"2024-06-28T13:38:15.843946Z","iopub.status.idle":"2024-06-28T13:38:15.851653Z","shell.execute_reply.started":"2024-06-28T13:38:15.843917Z","shell.execute_reply":"2024-06-28T13:38:15.850413Z"},"trusted":true},"execution_count":47,"outputs":[]},{"cell_type":"code","source":"train.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-28T13:38:19.154957Z","iopub.execute_input":"2024-06-28T13:38:19.155396Z","iopub.status.idle":"2024-06-28T13:38:19.172063Z","shell.execute_reply.started":"2024-06-28T13:38:19.155363Z","shell.execute_reply":"2024-06-28T13:38:19.170746Z"},"trusted":true},"execution_count":48,"outputs":[{"execution_count":48,"output_type":"execute_result","data":{"text/plain":"   PassengerId  Survived  Pclass  Sex   Age  SibSp  Parch     Fare  Embarked  \\\n0            1         0       3    1  22.0      1      0   7.2500         2   \n1            2         1       1    0  38.0      1      0  71.2833         0   \n2            3         1       3    0  26.0      0      0   7.9250         2   \n3            4         1       1    0  35.0      1      0  53.1000         2   \n4            5         0       3    1  35.0      0      0   8.0500         2   \n\n   Title  \n0      2  \n1      3  \n2      1  \n3      3  \n4      2  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Fare</th>\n      <th>Embarked</th>\n      <th>Title</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>7.2500</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>71.2833</td>\n      <td>0</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>1</td>\n      <td>3</td>\n      <td>0</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>7.9250</td>\n      <td>2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>53.1000</td>\n      <td>2</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>8.0500</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"test.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-28T13:38:26.465051Z","iopub.execute_input":"2024-06-28T13:38:26.465483Z","iopub.status.idle":"2024-06-28T13:38:26.483877Z","shell.execute_reply.started":"2024-06-28T13:38:26.465435Z","shell.execute_reply":"2024-06-28T13:38:26.482688Z"},"trusted":true},"execution_count":49,"outputs":[{"execution_count":49,"output_type":"execute_result","data":{"text/plain":"   PassengerId  Pclass  Sex   Age  SibSp  Parch     Fare  Embarked  Title\n0          892       3    1  34.5      0      0   7.8292         1      2\n1          893       3    0  47.0      1      0   7.0000         2      3\n2          894       2    1  62.0      0      0   9.6875         1      2\n3          895       3    1  27.0      0      0   8.6625         2      2\n4          896       3    0  22.0      1      1  12.2875         2      3","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Pclass</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Fare</th>\n      <th>Embarked</th>\n      <th>Title</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>892</td>\n      <td>3</td>\n      <td>1</td>\n      <td>34.5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>7.8292</td>\n      <td>1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>893</td>\n      <td>3</td>\n      <td>0</td>\n      <td>47.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>7.0000</td>\n      <td>2</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>894</td>\n      <td>2</td>\n      <td>1</td>\n      <td>62.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>9.6875</td>\n      <td>1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>895</td>\n      <td>3</td>\n      <td>1</td>\n      <td>27.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>8.6625</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>896</td>\n      <td>3</td>\n      <td>0</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>12.2875</td>\n      <td>2</td>\n      <td>3</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.impute import KNNImputer","metadata":{"execution":{"iopub.status.busy":"2024-06-20T12:07:17.558546Z","iopub.execute_input":"2024-06-20T12:07:17.559007Z","iopub.status.idle":"2024-06-20T12:07:18.267838Z","shell.execute_reply.started":"2024-06-20T12:07:17.558974Z","shell.execute_reply":"2024-06-20T12:07:18.266233Z"},"trusted":true},"execution_count":34,"outputs":[]},{"cell_type":"code","source":"Imp=KNNImputer(n_neighbors=5)\ntrain[ ['Pclass', 'Sex', 'Age', 'Title']]=Imp.fit_transform(train[ ['Pclass', 'Sex', 'Age', 'Title']])\ntest[ ['Pclass', 'Sex', 'Age', 'Title']]=Imp.fit_transform(test[ ['Pclass', 'Sex', 'Age', 'Title']])","metadata":{"execution":{"iopub.status.busy":"2024-06-20T12:14:00.334196Z","iopub.execute_input":"2024-06-20T12:14:00.334599Z","iopub.status.idle":"2024-06-20T12:14:00.378862Z","shell.execute_reply.started":"2024-06-20T12:14:00.334573Z","shell.execute_reply":"2024-06-20T12:14:00.377631Z"},"trusted":true},"execution_count":56,"outputs":[]},{"cell_type":"code","source":"from sklearn.impute import SimpleImputer\nSimImp=SimpleImputer()\ntest[['Fare']]=SimImp.fit_transform(test[['Fare']])","metadata":{"execution":{"iopub.status.busy":"2024-06-20T12:14:26.352890Z","iopub.execute_input":"2024-06-20T12:14:26.353293Z","iopub.status.idle":"2024-06-20T12:14:26.365452Z","shell.execute_reply.started":"2024-06-20T12:14:26.353258Z","shell.execute_reply":"2024-06-20T12:14:26.363996Z"},"trusted":true},"execution_count":57,"outputs":[]},{"cell_type":"code","source":"train.info()","metadata":{"execution":{"iopub.status.busy":"2024-06-20T12:14:46.938679Z","iopub.execute_input":"2024-06-20T12:14:46.939324Z","iopub.status.idle":"2024-06-20T12:14:46.953504Z","shell.execute_reply.started":"2024-06-20T12:14:46.939278Z","shell.execute_reply":"2024-06-20T12:14:46.952395Z"},"trusted":true},"execution_count":59,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 891 entries, 0 to 890\nData columns (total 10 columns):\n #   Column       Non-Null Count  Dtype  \n---  ------       --------------  -----  \n 0   PassengerId  891 non-null    int64  \n 1   Survived     891 non-null    int64  \n 2   Pclass       891 non-null    float64\n 3   Sex          891 non-null    float64\n 4   Age          891 non-null    float64\n 5   SibSp        891 non-null    int64  \n 6   Parch        891 non-null    int64  \n 7   Fare         891 non-null    float64\n 8   Embarked     891 non-null    int64  \n 9   Title        891 non-null    float64\ndtypes: float64(5), int64(5)\nmemory usage: 69.7 KB\n","output_type":"stream"}]},{"cell_type":"code","source":"train.loc[[0]]","metadata":{"execution":{"iopub.status.busy":"2024-06-20T13:06:49.779774Z","iopub.execute_input":"2024-06-20T13:06:49.780663Z","iopub.status.idle":"2024-06-20T13:06:49.798077Z","shell.execute_reply.started":"2024-06-20T13:06:49.780620Z","shell.execute_reply":"2024-06-20T13:06:49.796594Z"},"trusted":true},"execution_count":100,"outputs":[{"execution_count":100,"output_type":"execute_result","data":{"text/plain":"   PassengerId  Survived  Pclass  Sex   Age  SibSp  Parch  Fare  Embarked  \\\n0            1         0     3.0  1.0  22.0      1      0  7.25         2   \n\n   Title  \n0    2.0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Fare</th>\n      <th>Embarked</th>\n      <th>Title</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>3.0</td>\n      <td>1.0</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>7.25</td>\n      <td>2</td>\n      <td>2.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.svm import LinearSVC","metadata":{"execution":{"iopub.status.busy":"2024-06-19T14:40:32.873457Z","iopub.execute_input":"2024-06-19T14:40:32.873869Z","iopub.status.idle":"2024-06-19T14:40:32.879333Z","shell.execute_reply.started":"2024-06-19T14:40:32.873837Z","shell.execute_reply":"2024-06-19T14:40:32.877907Z"},"trusted":true},"execution_count":82,"outputs":[]},{"cell_type":"code","source":"SVM=LinearSVC(tol=1e-7)\nSVM.fit(X_train, y_train)\ny_pred_svm=SVM.predict(X_train)","metadata":{"execution":{"iopub.status.busy":"2024-06-19T15:08:02.792108Z","iopub.execute_input":"2024-06-19T15:08:02.792538Z","iopub.status.idle":"2024-06-19T15:08:02.860773Z","shell.execute_reply.started":"2024-06-19T15:08:02.792483Z","shell.execute_reply":"2024-06-19T15:08:02.859463Z"},"trusted":true},"execution_count":114,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/svm/_base.py:1244: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n  warnings.warn(\n","output_type":"stream"}]},{"cell_type":"code","source":"metrics.accuracy_score(y_train, y_pred_svm)","metadata":{"execution":{"iopub.status.busy":"2024-06-19T15:08:04.317661Z","iopub.execute_input":"2024-06-19T15:08:04.318043Z","iopub.status.idle":"2024-06-19T15:08:04.327346Z","shell.execute_reply.started":"2024-06-19T15:08:04.318015Z","shell.execute_reply":"2024-06-19T15:08:04.326100Z"},"trusted":true},"execution_count":115,"outputs":[{"execution_count":115,"output_type":"execute_result","data":{"text/plain":"0.7620650953984287"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}